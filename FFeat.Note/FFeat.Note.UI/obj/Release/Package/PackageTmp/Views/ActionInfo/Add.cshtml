@model FFeat.Note.Model.ActionInfo

@{
    ViewBag.Title = "Add";
}
<style>
    .tab {
        width: 100%;
        background-image: url(bg1.png);
        background-size: cover;
        margin-top: 50px;
    }

    label {
        cursor: pointer;
    }

    .tab .box {
        width: 100%;
        position: relative;
        margin: 0 auto;
        height: 100%;
    }

        .tab .box .menus {
            width: 14%;
            height: 100%;
            background: rgb(92,94,103);
            float: left;
            margin-top: 60px;
            border-radius: 10px;
            overflow: hidden;
        }

            .tab .box .menus li {
                width: 100%;
                height: 100%;
                background: rgb(69, 100, 94);
                /*font-size: 20px;*/
                color: #fff;
                text-align: center;
                border-bottom: 1px solid rgba(0,0,0,0.5);
                line-height: 35px;
                transition: all 0.3s;
                -moz-transition: all 0.3s;
                -o-transition: all 0.3s;
                -webkit-transition: all 0.3s;
            }

                .tab .box .menus li:nth-child(7) {
                    border-bottom: none;
                }

        .tab .box .bg {
            height: 40px !important;
            background: rgb(170, 200, 177) !important;
            line-height: 40px !important;
        }

    .tab .right {
        float: left;
        width: 60%;
        margin-top: 25px;
        height: 400px;
        overflow: hidden;
        margin-left: 40px;
        border-radius: 10px;
        background: rgba(0,0,0,0.5);
    }

    .tab .tab_right {
        width: 100%;
        height: 800px;
        color: #fff;
        text-align: center;
        position: relative;
    }

        .tab .tab_right img {
            width: 100%;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: 0;
        }

    .tab .scroll {
        transition: all 0.5s;
        -moz-transition: all 0.5s;
        -o-transition: all 0.5s;
        -webkit-transition: all 0.5s;
    }

    .tgl {
        display: none;
    }

        .tgl + .tgl-btn {
            outline: 0;
            display: block;
            width: 4em;
            height: 2em;
            position: relative;
            cursor: pointer;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            .tgl + .tgl-btn:after, .tgl + .tgl-btn:before {
                position: relative;
                display: block;
                content: "";
                width: 50%;
                height: 100%;
            }



    .tgl-skewed + .tgl-btn {
        overflow: hidden;
        -webkit-transform: skew(-10deg);
        transform: skew(-10deg);
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        -webkit-transition: all .2s ease;
        transition: all .2s ease;
        font-family: sans-serif;
        background: #888;
        margin-top: 10px;
    }

        .tgl-skewed + .tgl-btn:after, .tgl-skewed + .tgl-btn:before {
            -webkit-transform: skew(10deg);
            transform: skew(10deg);
            display: inline-block;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            width: 100%;
            text-align: center;
            position: absolute;
            line-height: 2em;
            font-weight: bold;
            color: #fff;
            text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4);
        }

        .tgl-skewed + .tgl-btn:after {
            left: 100%;
            content: attr(data-tg-on);
        }

        .tgl-skewed + .tgl-btn:before {
            left: 0;
            content: attr(data-tg-off);
        }

        .tgl-skewed + .tgl-btn:active {
            background: #888;
        }

            .tgl-skewed + .tgl-btn:active:before {
                left: -10%;
            }

    .tgl-skewed:checked + .tgl-btn {
        background: #86d993;
    }

        .tgl-skewed:checked + .tgl-btn:before {
            left: -100%;
        }

        .tgl-skewed:checked + .tgl-btn:after {
            left: 0;
        }

        .tgl-skewed:checked + .tgl-btn:active:after {
            left: 10%;
        }

    .urlLbl {
        position: relative;
        left: -20px;
        top: -25px;
        font-family: sans-serif;
    }

    .radioBtn {
        width: 60%;
        margin-left: 3%;
        height: 33PX;
        float: left;
        margin-bottom: 2px;
    }
</style>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>
    $(function () {

        $.post("/ActionInfo/GetAllUrl", {}, function (json) {
            GetAllUrl(json);
        });
    })
    function afterAdd(data) {
        if (data == "ok") {
            alert("添加成功！")
            window.location.href = "/ActionInfo/Index";
        } else {
            alert("请选择权限");
        }
    }

    //获取所有控制器的url
    function GetAllUrl(json) {
        var obj = JSON.parse(json);
        for (var ctrl in obj) {
            //控制器名字
            var ctrlname = obj[ctrl].ctrlName;
            if (ctrl == 0) {
                var strCtrl = "<li class='bg' >" + ctrlname + "</li>";

            }
            else {
                var strCtrl = "<li class >" + ctrlname + "</li>";

            }
            $(".menus").append(strCtrl);
            var strurl = "";
            strurl = "<div class='tab_right'>";

            var urlname = obj[ctrl].allUrl;
            for (var i in urlname) {
                //含方法的url
                var url = urlname[i].actionUrl;
                strurl += "<div class='radioBtn'><input value='" + url + "' class='tgl tgl-skewed' id='" + url + "' type='radio' name='url' /><label class='tgl-btn' data-tg-off='OFF' data-tg-on='ON' for='" + url + "'></label><label class='urlLbl' for='" + url + "'>" + url + "</label></div>";

            }
            strurl += "</div>";
            $(".scroll").append(strurl);
        }
    }


    $(function () {
        //选项卡切换事件
        $(".tab .menus").on("mouseover", 'li', function () {
            $('.tab .menus li').each(function () {
                $('.tab .menus li').mouseover(function () {
                    $('.tab .menus li').removeClass('bg');
                    $(this).addClass('bg');
                    var index = $(this).index();
                    $('.tab .scroll').css('margin-top', -index * 800 + 'px');

                })
            })
        })

    })

</script>
<div class="container" id="page-content">
    <h2>添加权限信息</h2>

    @using (Ajax.BeginForm(new AjaxOptions() { OnSuccess = "afterAdd" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ActionInfo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ActionName, "权限名", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActionName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Url, "Url", htmlAttributes: new { @class = "control-label col-md-2" })
                <!--<div class="col-md-10">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                    </div>-->

                <div class="tab">

                    <div class="box">
                        <ul class="menus">

                            @*<li class="bg">tab1</li>*@


                        </ul>
                        <div class="right">
                            <div class="scroll">
                                <!--选项卡内容-->
                                <!--选项卡内容-->
                            </div>

                        </div>
                    </div>
                    <div class="clear"></div>
                </div>

            </div>


            @Html.HiddenFor(model => model.SubTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SubTime, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.DelFlag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DelFlag, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Remark, "备注", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="创  建" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("返回列表", "Index")
    </div>
</div>
