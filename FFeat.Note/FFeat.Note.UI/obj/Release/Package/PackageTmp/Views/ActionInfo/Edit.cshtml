@model FFeat.Note.Model.ActionInfo

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>
    function afterEidt(data) {
        if (data == "ok") {
            alert("修改成功");
            window.location.href = "/ActionInfo/Index";
        }
        else {
            alert(data);
        }
    }
</script>
<div class="container" id="page-content">
    <h2>编辑权限信息</h2>


    @using (Ajax.BeginForm(new AjaxOptions() { OnSuccess = "afterEidt" }))
    {
        @*@Html.AntiForgeryToken()*@

        <div class="form-horizontal">
            <h4>权限信息</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.ActionName, "权限名：", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActionName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Url, "Url：", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.SubTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SubTime, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.DelFlag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DelFlag, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Remark, "备注：", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("返回列表", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
